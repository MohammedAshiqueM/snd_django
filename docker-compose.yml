services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=snd
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  web:
    build: .
    command: uvicorn snd_backend.asgi:application --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=snd_backend.settings
      - POSTGRES_DB=snd
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DATABASE_URL=postgresql://postgres:12345@db:5432/snd
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  celery:
    build: .
    command: celery -A snd_backend worker -l INFO
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=snd_backend.settings
      - POSTGRES_DB=snd
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DATABASE_URL=postgresql://postgres:12345@db:5432/snd
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_started
    networks:
      - app-network

volumes:
  postgres_data:
  static_volume:

networks:
  app-network:
    driver: bridge